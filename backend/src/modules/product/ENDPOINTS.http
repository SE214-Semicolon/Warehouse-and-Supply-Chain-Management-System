### Product Module - HTTP Requests
### Use with REST Client extension in VS Code

@baseUrl = http://localhost:3000
@token = YOUR_JWT_TOKEN_HERE

### ===================================
### AUTHENTICATION (Get token first)
### ===================================

### Login to get JWT token
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "username": "admin",
  "password": "admin123"
}

### ===================================
### PRODUCT CATEGORIES
### ===================================

### Create Category
POST {{baseUrl}}/product-categories
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Electronics",
  "metadata": {
    "description": "Electronic devices"
  }
}

### Create Subcategory
POST {{baseUrl}}/product-categories
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Laptops",
  "parentId": "PARENT_CATEGORY_UUID_HERE"
}

### Get All Categories (Tree Structure)
GET {{baseUrl}}/product-categories
Authorization: Bearer {{token}}

### Get Category by ID
GET {{baseUrl}}/product-categories/CATEGORY_UUID_HERE
Authorization: Bearer {{token}}

### Update Category
PATCH {{baseUrl}}/product-categories/CATEGORY_UUID_HERE
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Updated Electronics"
}

### Delete Category
DELETE {{baseUrl}}/product-categories/CATEGORY_UUID_HERE
Authorization: Bearer {{token}}

### ===================================
### PRODUCTS
### ===================================

### Create Product
POST {{baseUrl}}/products
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "sku": "LAPTOP-DELL-XPS15",
  "name": "Dell XPS 15 Laptop",
  "categoryId": "CATEGORY_UUID_HERE",
  "unit": "pcs",
  "barcode": "1234567890123",
  "parameters": {
    "brand": "Dell",
    "processor": "Intel i7",
    "ram": "16GB",
    "storage": "512GB SSD"
  }
}

### Get All Products (with pagination)
GET {{baseUrl}}/products?page=1&limit=20
Authorization: Bearer {{token}}

### Get All Products (with search)
GET {{baseUrl}}/products?search=laptop
Authorization: Bearer {{token}}

### Get All Products (filter by category)
GET {{baseUrl}}/products?categoryId=CATEGORY_UUID_HERE
Authorization: Bearer {{token}}

### Get All Products (filter by barcode)
GET {{baseUrl}}/products?barcode=1234567890123
Authorization: Bearer {{token}}

### Get Product by ID
GET {{baseUrl}}/products/PRODUCT_UUID_HERE
Authorization: Bearer {{token}}

### Get Product by SKU
GET {{baseUrl}}/products/sku/LAPTOP-DELL-XPS15
Authorization: Bearer {{token}}

### Get Product by Barcode
GET {{baseUrl}}/products/barcode/1234567890123
Authorization: Bearer {{token}}

### Update Product
PATCH {{baseUrl}}/products/PRODUCT_UUID_HERE
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Dell XPS 15 Laptop - Updated",
  "parameters": {
    "brand": "Dell",
    "processor": "Intel i9",
    "ram": "32GB",
    "storage": "1TB SSD"
  }
}

### Update Product SKU
PATCH {{baseUrl}}/products/PRODUCT_UUID_HERE
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "sku": "LAPTOP-DELL-XPS15-V2"
}

### Delete Product
DELETE {{baseUrl}}/products/PRODUCT_UUID_HERE
Authorization: Bearer {{token}}

### ===================================
### PRODUCT BATCHES
### ===================================

### Create Product Batch
POST {{baseUrl}}/product-batches
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "productId": "PRODUCT_UUID_HERE",
  "batchNo": "BATCH-2024-001",
  "quantity": 100,
  "manufactureDate": "2024-01-15T00:00:00.000Z",
  "expiryDate": "2025-01-15T00:00:00.000Z",
  "barcodeOrQr": "QR:BATCH-2024-001",
  "inboundReceiptId": "RECEIPT_UUID_HERE"
}

### Create Product Batch (minimal)
POST {{baseUrl}}/product-batches
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "productId": "PRODUCT_UUID_HERE",
  "batchNo": "BATCH-2024-002",
  "quantity": 50
}

### Get All Batches (paginated)
GET {{baseUrl}}/product-batches?page=1&limit=20
Authorization: Bearer {{token}}

### Get All Batches (filter by product)
GET {{baseUrl}}/product-batches?productId=PRODUCT_UUID_HERE
Authorization: Bearer {{token}}

### Get All Batches (search by batch number)
GET {{baseUrl}}/product-batches?batchNo=BATCH-2024
Authorization: Bearer {{token}}

### Get All Batches (filter by expiry date)
GET {{baseUrl}}/product-batches?expiryBefore=2024-12-31T00:00:00.000Z
Authorization: Bearer {{token}}

### Get Expiring Batches (next 30 days)
GET {{baseUrl}}/product-batches/expiring?daysAhead=30
Authorization: Bearer {{token}}

### Get Expiring Batches (next 90 days with pagination)
GET {{baseUrl}}/product-batches/expiring?daysAhead=90&page=1&limit=10
Authorization: Bearer {{token}}

### Get Batches by Product
GET {{baseUrl}}/product-batches/product/PRODUCT_UUID_HERE
Authorization: Bearer {{token}}

### Get Batch by ID
GET {{baseUrl}}/product-batches/BATCH_UUID_HERE
Authorization: Bearer {{token}}

### Update Batch
PATCH {{baseUrl}}/product-batches/BATCH_UUID_HERE
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "quantity": 150,
  "expiryDate": "2025-06-15T00:00:00.000Z"
}

### Update Batch Number
PATCH {{baseUrl}}/product-batches/BATCH_UUID_HERE
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "batchNo": "BATCH-2024-001-UPDATED"
}

### Delete Batch
DELETE {{baseUrl}}/product-batches/BATCH_UUID_HERE
Authorization: Bearer {{token}}

### ===================================
### ERROR TESTING
### ===================================

### Create Product with duplicate SKU (should fail with 409)
POST {{baseUrl}}/products
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "sku": "LAPTOP-DELL-XPS15",
  "name": "Another Product",
  "unit": "pcs"
}

### Create Batch with invalid dates (should fail with 400)
POST {{baseUrl}}/product-batches
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "productId": "PRODUCT_UUID_HERE",
  "batchNo": "BATCH-TEST-ERROR",
  "quantity": 100,
  "manufactureDate": "2025-01-15T00:00:00.000Z",
  "expiryDate": "2024-01-15T00:00:00.000Z"
}

### Get non-existent product (should fail with 404)
GET {{baseUrl}}/products/00000000-0000-0000-0000-000000000000
Authorization: Bearer {{token}}

### Create product without authentication (should fail with 401)
POST {{baseUrl}}/products
Content-Type: application/json

{
  "sku": "TEST-SKU",
  "name": "Test Product",
  "unit": "pcs"
}

### Delete category with children (should fail with 400)
DELETE {{baseUrl}}/product-categories/CATEGORY_WITH_CHILDREN_UUID
Authorization: Bearer {{token}}

### Delete product with batches (should fail with 400)
DELETE {{baseUrl}}/products/PRODUCT_WITH_BATCHES_UUID
Authorization: Bearer {{token}}

### ===================================
### COMPLEX QUERIES
### ===================================

### Search products with multiple filters
GET {{baseUrl}}/products?search=laptop&categoryId=CATEGORY_UUID&page=1&limit=10
Authorization: Bearer {{token}}

### Get batches expiring in specific date range
GET {{baseUrl}}/product-batches?expiryAfter=2024-01-01T00:00:00.000Z&expiryBefore=2024-12-31T00:00:00.000Z
Authorization: Bearer {{token}}

### ===================================
### WORKFLOW EXAMPLES
### ===================================

### Workflow 1: Create new product with batch
# 1. Create category (if not exists)
POST {{baseUrl}}/product-categories
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Test Category"
}

###
# 2. Create product
POST {{baseUrl}}/products
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "sku": "TEST-PRODUCT-001",
  "name": "Test Product",
  "categoryId": "CATEGORY_UUID_FROM_STEP_1",
  "unit": "pcs"
}

###
# 3. Create batch for the product
POST {{baseUrl}}/product-batches
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "productId": "PRODUCT_UUID_FROM_STEP_2",
  "batchNo": "BATCH-TEST-001",
  "quantity": 100,
  "manufactureDate": "2024-01-15T00:00:00.000Z",
  "expiryDate": "2025-01-15T00:00:00.000Z"
}

###
# 4. Verify the product with batches
GET {{baseUrl}}/products/PRODUCT_UUID_FROM_STEP_2
Authorization: Bearer {{token}}

### ===================================
### NOTES
### ===================================

# Replace placeholders:
# - YOUR_JWT_TOKEN_HERE: Get from login response
# - CATEGORY_UUID_HERE: Actual category UUID
# - PRODUCT_UUID_HERE: Actual product UUID
# - BATCH_UUID_HERE: Actual batch UUID
# - RECEIPT_UUID_HERE: Actual receipt UUID (optional)

# VS Code REST Client extension shortcuts:
# - Ctrl+Alt+R (Cmd+Alt+R on Mac): Send request
# - Ctrl+Alt+C (Cmd+Alt+C on Mac): Cancel request
# - Ctrl+Alt+H (Cmd+Alt+H on Mac): View request history
